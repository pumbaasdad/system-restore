- hosts: all
  become: true
  pre_tasks:
    - name: Include secrets
      include_vars: "{{ path }}"
      vars:
        params:
          files: "{{ secrets_files }}"
          paths: secrets
          skip: true
        path: "{{ lookup('first_found', params) }}"

    - name: Load secrets
      set_fact:
        secrets: "{{ secrets_dictionary }}"
        network: "{{ secret_network.network }}"

    - name: Load network configuration
      set_fact:
        network: "{{ secret_network.network }}"

    - name: Add apt keys
      apt_key:
        url: "{{ item.url }}"
      with_items: "{{ apt_keys }}"

    - name: Add PPAs
      apt_repository:
        repo: "ppa:{{ item.ppa }}"
        codename: "{{ item.codename | default(ansible_distribution_release) }}"
      with_items: "{{ apt_ppas }}"

    - name: Add deb repos
      apt_repository:
        repo: "deb [arch=amd64] {{ item.url }} {{ item.codename | default(ansible_distribution_release) }} {{ item.channel | default('stable') }}"
      with_items: "{{ deb_repos }}"

    - name: Install packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: true

    - name: Upgrade packages
      apt:
        upgrade: "yes"

    - name: Install jmespath
      local_action:
        module: pip
        name: jmespath

    - name: Create udev symlinks
      template:
        src: rules.j2
        dest: "/etc/udev/rules.d/ansible.rules"
      register: udev_symlinks

    - name: Reload udev rules
      shell: "udevadm control --reload-rules && udevadm trigger"
      when: udev_symlinks.changed

    - name: Create directories
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner | default(omit) }}"
        group: "{{ item.group | default(omit) }}"
      loop: "{{ directories }}"

  roles:
    - security
    - docker
    - shell
    - system-config

  post_tasks:
    - name: Start services on boot
      service:
        name: "{{ item }}"
        enabled: true
        state: started
      with_items: "{{ services }}"

    - name: Remove unused packages
      apt:
        autoremove: yes

  handlers:
    - name: Reload systemd
      systemd:
        daemon_reload: yes
