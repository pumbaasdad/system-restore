{% set suffix = [network.domain, network.suffix] | join('.') %}
{% set suffixed_nameservers = network.nameservers | zip_longest([], fillvalue='.' + suffix) | map('join') | list %}
{% set ip_nameservers = network.nameservers | map('ipaddr') | map('default', None, 'true') | list %}
{% set nameservers = ip_nameservers | zip(suffixed_nameservers) | map('reject', 'none') | map('list') | map('first') | list %}
{% set suffixed_routers = network.routers | zip_longest([], fillvalue='.' + suffix) | map('join') | list %}
{% set ip_routers = network.routers | map('ipaddr') | map('default', None, 'true') | list %}
{% set routers = ip_routers| zip(suffixed_routers) | map('reject', 'none') | map('list') | map('first') | list %}
ddns-update-style none;

option domain-name "example.org";
option domain-name-servers ns1.example.org, ns2.example.org;

default-lease-time 172800;
max-lease-time 345600;

subnet {{ dhcp_docker_subnet | ipaddr('network') }} netmask {{ dhcp_docker_subnet | ipaddr('netmask') }} {
}

subnet {{ network.ipv4_subnet | ipaddr('network') }} netmask {{ network.ipv4_subnet | ipaddr('netmask') }} {
    authoritative;
    range {{ network.dhcpv4_subnet | ipaddr(1) | ipaddr('address') }} {{ network.dhcpv4_subnet | ipaddr('-2') | ipaddr('address') }};
    option domain-name-servers {{ nameservers | join(', ') }};
    option domain-name "{{ [network.domain, network.suffix] | join('.') }}";
    option routers {{ routers | join(', ') }};
    option broadcast-address {{ network.ipv4_subnet | ipaddr('broadcast') }};
    use-host-decl-names on;
{% set types = [
    { 'self': 'ethernet', 'other': 'wifi', 'offset': 0 },
    { 'self': 'wifi', 'other': 'ethernet', 'offset': 256 }
] %}
{% for zone in network.zones %}
    {%- for host in zone.hosts %}
        {%- for type in types %}

            {%- set connector_type = '' %}
            {%- if host[type.other] is defined %}
                {%- set connector_type = type.self + '.' %}
            {%- endif %}

            {%- if host[type.self] is defined %}

    host {{ connector_type }}{{ host.name }}.{{ zone.name }} {
        hardware ethernet {{ host[type.self].mac }};
        fixed-address {{ connector_type }}{{ host.name }}.{{ zone.name }}.{{ network.domain }}.{{ network.suffix }};
    }
            {% endif %}
        {% endfor %}
    {% endfor %}
{% endfor %}
}
