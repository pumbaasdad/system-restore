internal_zone: "{{ network | json_query('zones[?hosts[*].internal] | [0]') }}"
internal_host: "{{ internal_zone | json_query('hosts[?internal] | [0]') }}"
internal_ip: "{{ internal_zone.ipv4_subnet | ansible.utils.ipaddr(internal_host.ipv4_offset) | ansible.utils.ipaddr('address') }}"

certificates_role:
  directories:
    - path: "{{ letsencrypt_dir }}"
      volume:
        name: "{{ letsencrypt_certificate_volume }}"
    - path: "{{ letsencrypt_dir }}/etc"
      volume:
        name: "{{ letsencrypt_etc_volume }}"
        backup: true
  files:
    - src: roles/certificates/templates/Dockerfile
      dest: "{{ dockerfile_dir }}/{{ letsencrypt_service_name }}.Dockerfile"
  docker:
    service:
      name: "{{ letsencrypt_service_name }}"
      config_dir: "{{ fail2ban_dir }}"
      image: linuxserver/swag
      volumes:
        - "{{ letsencrypt_certificate_volume }}:/config"
        - public-nginx-log:/config/log/nginx-public
        - "{{ hass_dir }}/home-assistant.log:/config/log/hass/home-assistant.log"
        - fail2ban-jails:/etc/fail2ban/jail.d
      environment:
        - EMAIL={{ letsencrypt_email }}
        - SUBDOMAINS=wildcard
        - URL={{ letsencrypt_url }}
        - VALIDATION=duckdns
        - DUCKDNSTOKEN={{ ddns_role.provides.duckdns_token }}
        - DHLEVEL=2048
      capabilities:
        - NET_ADMIN
      backup: true
  provides:
    certificate_volume: "{{ letsencrypt_certificate_volume }}"

certificates_duckdns_token: "{{ ddns_role.provides.duckdns_token }}"
