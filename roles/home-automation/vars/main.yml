home_automation_internal_zone: "{{ network | json_query('zones[?hosts[*].internal] | [0]') }}"
home_automation_internal_host: "{{ internal_zone | json_query('hosts[?internal] | [0]') }}"
home_automation_internal_ip: "{{ internal_zone.ipv4_subnet | ansible.utils.ipaddr(internal_host.ipv4_offset) | ansible.utils.ipaddr('address') }}"

home_automation_role:
  directories:
    - path: "{{ hass_dir }}"
      volume:
        name: hass-config
        backup: true
    - path: "{{ hass_db_dir }}"
      volume:
        name: hass-db
  files:
    - src: roles/home-automation/files/home-assistant.log
      dest: "{{ hass_dir }}/home-assistant.log"
      force: no
  intrusion_detection:
    jails:
      - jail_name: ha
        file: hass/home-assistant.log
    filters:
      - src: roles/home-automation/templates/filter.local.j2
        dest: ha.local
  reverse_proxy:
    public_site_configs:
      - src: roles/home-automation/templates/private-reverse-proxy.j2
        name: hass-private
      - src: roles/home-automation/templates/public-reverse-proxy.j2
        name: hass-public
  docker:
    service:
      name: homeassistant
      container_name: hass
      image: lscr.io/linuxserver/homeassistant:latest
      volumes:
        - hass-config:/config
        - hass-db:/db
      ports:
        - "{{ home_automation_wemo_server_port }}:{{ home_automation_wemo_server_port }}"
      environment:
        - PYWEMO_HTTP_SERVER_PORT={{ home_automation_wemo_server_port }}
        - PYWEMO_CALLBACK_ADDRESS={{ home_automation_internal_ip }}:{{ home_automation_wemo_server_port }}
      networks:
        default: false
        internal: true
        extra:
          docker2:
      config_dir: "{{ hass_dir }}"
      backup: true
    networks:
      - name: docker2
  files_changed_by_tasks: "{{ [hass_config | default(None)] | select() }}"
