reverse_proxy_internal_site_config_files: "{%- set temp_internal_site_config_files = [] -%}
                                           {%- for config in __reverse_proxy_configs -%}
                                           {%- set _ = temp_internal_site_config_files.append({
                                               'src': 'roles/reverse-proxy/templates/internal-reverse-proxy.j2',
                                               'dest': reverse_proxy_dir + '/internal/site-confs/' + config.subdomain + '.conf',
                                               'vars': {
                                                 'subdomain': config.subdomain,
                                                 'target_host': config.internal.host,
                                                 'target_port': config.internal.port
                                               }
                                           }) -%}
                                           {%- endfor -%}
                                           {{- temp_internal_site_config_files -}}"

reverse_proxy_internal_aliases: "{%- set temp_internal_aliases = [] -%}
                                 {%- for config in __reverse_proxy_configs -%}
                                 {%- set _ = temp_internal_aliases.append(config.subdomain + '.' + network.domain + '.' + network.suffix) -%}                                 
                                 {%- endfor -%}
                                 {{- temp_internal_aliases -}}"

reverse_proxy_external_site_config_files: "{%- set temp_external_site_config_files = [] -%}
                                           {%- for config in __reverse_proxy_configs -%}
                                           {%- if config.external is defined -%} 
                                           {%- set _ = temp_external_site_config_files.append({
                                               'src': 'roles/reverse-proxy/templates/external-reverse-proxy.j2',
                                               'dest': reverse_proxy_dir + '/external/site-confs/' + config.subdomain + '.conf',
                                               'vars': {
                                                 'subdomain': config.subdomain,
                                                 'listen_port': config.external.port,
                                                 'locations': config.external.locations
                                               }
                                           }) -%}
                                           {%- endif -%}
                                           {%- endfor -%}
                                           {{- temp_external_site_config_files -}}"

reverse_proxy_files:
  - src: roles/reverse-proxy/templates/nginx.conf.j2
    dest: "{{ reverse_proxy_dir }}/nginx/nginx.conf"
  - src: roles/reverse-proxy/templates/Dockerfile
    dest: "{{ dockerfile_dir }}/{{ reverse_proxy_internal_service_name }}.Dockerfile"
  - src: roles/reverse-proxy/templates/Dockerfile
    dest: "{{ dockerfile_dir }}/{{ reverse_proxy_external_service_name }}.Dockerfile"
  - src: roles/reverse-proxy/templates/default.j2
    dest: "{{ reverse_proxy_dir }}/external/site-confs/default.conf"
    vars:
      listen_port: 80

reverse_proxy_extra_internal_networks: "{%- set temp_reverse_proxy_extra_internal_networks = { reverse_proxy_bridge_network: { 'aliases': reverse_proxy_internal_aliases } } -%}
                                        {{- temp_reverse_proxy_extra_internal_networks -}}"

reverse_proxy_role:
  directories:
    - path: "{{ reverse_proxy_dir }}"
    - path: "{{ reverse_proxy_dir }}/nginx"
      volume:
        name: "{{ reverse_proxy_config_volume }}"
    - path: "{{ reverse_proxy_dir }}/internal/log/nginx"
      volume:
        name: "{{ reverse_proxy_internal_log_volume }}"
    - path: "{{ reverse_proxy_dir }}/internal/site-confs"
      volume:
        name: "{{ reverse_proxy_internal_site_configs_volume }}"
    - path: "{{ reverse_proxy_dir }}/external/log/nginx"
      volume:
        name: "{{ reverse_proxy_external_log_volume }}"
    - path: "{{ reverse_proxy_dir }}/external/site-confs"
      volume:
        name: "{{ reverse_proxy_external_site_configs_volume }}"
  files: "{{ reverse_proxy_files + (reverse_proxy_internal_site_config_files | default([])) + (reverse_proxy_external_site_config_files | default([])) }}"
  intrusion_detection:
    jails:
      - jail_name: nginx-http-auth
        file: reverse-proxy/error.log
        max_retries: 5
        port: https
      - jail_name: nginx-badbots
        file: reverse-proxy/access.log
        max_retries: 2
        port: https
      - jail_name: nginx-botsearch
        file: reverse-proxy/access.log
        max_retries: 5
        port: https
  docker:
    services:
      - name: "{{ reverse_proxy_internal_service_name }}"
        config_dir: "{{ reverse_proxy_dir }}"
        volumes:
          - "{{ __reverse_proxy_certificate_volume | default('undefined') }}:/config"
          - "{{ reverse_proxy_config_volume }}:/config/nginx"
          - "{{ reverse_proxy_internal_site_configs_volume }}:/config/nginx/site-confs"
          - "{{ reverse_proxy_internal_log_volume }}:/config/log/nginx"
        ports:
          - "80:80"
        environment:
          - DHLEVEL=2048
        networks:
          default_ipv4_address: "{{ __reverse_proxy_ip | default('') }}"
          extra: "{{ reverse_proxy_extra_internal_networks | default([]) }}"
      - name: "{{ reverse_proxy_external_service_name }}"
        config_dir: "{{ reverse_proxy_dir }}"
        volumes:
          - "{{ reverse_proxy_config_volume }}:/config/nginx"
          - "{{ reverse_proxy_external_site_configs_volume }}:/config/nginx/site-confs"
          - "{{ reverse_proxy_external_log_volume }}:/config/log/nginx"
        networks:
          default: false
          extra:
            - "{{ reverse_proxy_bridge_network }}"
            - "{{ reverse_proxy_external_network }}"
    networks:
      - name: "{{ reverse_proxy_bridge_network }}"
        internal: true
      - name: "{{ reverse_proxy_external_network }}"
        internal: true
  provides:
    external_network: "{{ reverse_proxy_external_network }}"