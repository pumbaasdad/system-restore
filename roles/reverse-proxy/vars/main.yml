external_zone: "{{ network | json_query('zones[?hosts[*].external] | [0]') }}"
external_host: "{{ external_zone | json_query('hosts[?external] | [0]') }}"
external_ip: "{{ external_zone.ipv4_subnet | ansible.utils.ipaddr(external_host.ipv4_offset) | ansible.utils.ipaddr('address') }}"

reverse_proxy_extra_networks: "{%- set temp_reverse_proxy_extra_networks = { reverse_proxy_public_network: {} } -%}
                               {%- for network in (reverse_proxy_internal_networks | default([])) -%}
                               {%- set _ = temp_reverse_proxy_extra_networks.update(network) -%}
                               {%- endfor -%}
                               {{- temp_reverse_proxy_extra_networks -}}"

reverse_proxy_role:
  directories:
    - path: "{{ public_reverse_proxy_dir }}"
    - path: "{{ public_reverse_proxy_dir }}/nginx"
      volume:
        name: "{{ reverse_proxy_config_volume }}"
    - path: "{{ public_reverse_proxy_dir }}/log/nginx"
      volume:
        name: "{{ reverse_proxy_log_volume }}"
  files:
    - src: roles/reverse-proxy/templates/nginx.conf.j2
      dest: "{{ public_reverse_proxy_dir }}/nginx/nginx.conf"
    - src: roles/reverse-proxy/templates/Dockerfile
      dest: "{{ dockerfile_dir }}/{{ reverse_proxy_service_name }}.Dockerfile"
  intrusion_detection:
    jails:
      - jail_name: nginx-http-auth
        file: nginx-public/error.log
        max_retries: 5
        port: https
      - jail_name: nginx-badbots
        file: nginx-public/access.log
        max_retries: 2
        port: https
      - jail_name: nginx-botsearch
        file: nginx-public/access.log
        max_retries: 5
        port: https
  reverse_proxy:
    private_site_configs:
      - src: roles/reverse-proxy/templates/default.j2
        name: default
        nginx_port: 80
    public_site_configs:
      - src: roles/reverse-proxy/templates/default.j2
        name: default
        nginx_port: 443
  files_changed_by_tasks: "{{ reverse_proxy_public_site_config_installation.results | default([]) }}"
  docker:
    service:
      name: "{{ reverse_proxy_service_name }}"
      config_dir: "{{ public_reverse_proxy_dir }}"
      image: linuxserver/nginx
      volumes:
        - "{{ reverse_proxy_certificate_volume }}:/config"
        - "{{ reverse_proxy_config_volume }}:/config/nginx"
        - "{{ reverse_proxy_log_volume }}:/config/log/nginx"
      ports:
        - "{{ external_ip }}:{{ public_port }}:443"
        - "{{ external_ip }}:80:80"
      environment:
        - DHLEVEL=2048
      networks:
        default: false
        extra: "{{ reverse_proxy_extra_networks }}"
    networks:
      - name: "{{ reverse_proxy_public_network }}"
  iptable_rules:
    - chain: INPUT
      in_interface: "{{ reverse_proxy_public_network }}"
      cstate: []
      jump: DROP
    - chain: INPUT
      in_interface: "{{ reverse_proxy_public_network }}"
      cstate: [ESTABLISHED, RELATED]
      jump: ACCEPT
    - chain: DOCKER-USER
      in_interface: "{{ reverse_proxy_public_network }}"
      cstate: []
      jump: DROP
    - chain: DOCKER-USER
      in_interface: "{{ reverse_proxy_public_network }}"
      cstate: [ESTABLISHED, RELATED]
      jump: ACCEPT

reverse_proxy_public_site_configs: "{{ public_site_configs }}"
reverse_proxy_certificate_volume: "{{ certificates_role.provides.certificate_volume }}"
reverse_proxy_networks: "{{ all_reverse_proxy_networks }}"